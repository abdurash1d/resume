version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8001:8001"
    volumes:
      - .:/app
    working_dir: /app
    env_file:
      - .env.prod
    depends_on:
      - db
    networks:
      - app-network
    command: >
      sh -c "alembic upgrade head && 
             uvicorn app.main:app --host 0.0.0.0 --port 8001 --workers 4 --proxy-headers"

  db:
    image: postgres:16-alpine
    restart: always
    env_file:
      - .env.prod
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.23-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/letsencrypt
      - ./certs/dhparam.pem:/etc/nginx/dhparam.pem:ro
      - /var/log/nginx:/var/log/nginx
    depends_on:
      - web
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
